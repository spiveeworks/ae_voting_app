
contract ADT_Test =
  datatype adt = NoInts | OneInt(int) | TwoInts(int, int)
  type aliased('a) = ('a * 'a)
  record rec = {x : list(adt), y : aliased(int)}

  type state = option(int)

  entrypoint init(x: rec) : option(int) = None

  entrypoint method(x : option(int), y : rec): int =
    let (z, _) = y.y
    z
